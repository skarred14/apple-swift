add_sourcekit_library(SourceKitSwiftLang
  CodeCompletionOrganizer.cpp
  SwiftASTManager.cpp
  SwiftCompletion.cpp
  SwiftConformingMethodList.cpp
  SwiftDocSupport.cpp
  SwiftEditor.cpp
  SwiftEditorInterfaceGen.cpp
  SwiftIndexing.cpp
  SwiftLangSupport.cpp
  SwiftSourceDocInfo.cpp
  SwiftTypeContextInfo.cpp
    LLVM_LINK_COMPONENTS ${LLVM_TARGETS_TO_BUILD}
      bitreader
      bitwriter
      coverage
      debuginfodwarf
      instrumentation
      ipo
      lto
      mc
      mcparser
      option
      objcarcopts
      profiledata
)
if(CLANG_LINK_CLANG_DYLIB)
  set(LIBS
      clang-cpp)
else()
  set(LIBS
      clangIndex
      clangFormat
      clangToolingCore
      clangFrontendTool
      clangFrontend
      clangDriver
      clangCodeGen
      clangSerialization
      clangParse
      clangSema
      clangAnalysis
      clangEdit
      clangRewriteFrontend
      clangRewrite
      clangLex
      clangAST
      clangAPINotes
      clangBasic)
endif()
target_link_libraries(SourceKitSwiftLang PRIVATE
  SourceKitCore
  swiftDriver
  swiftFrontend
  swiftClangImporter
  swiftIDE
  swiftAST
  swiftMarkup
  swiftParse
  swiftSIL
  swiftSILGen
  swiftSILOptimizer
  swiftIRGen
  swiftSema
  swiftBasic
  swiftSerialization
  swiftSyntax
  swiftOption
  libcmark_static
  # Clang dependencies.
  ${LIBS})
add_dependencies(SourceKitSwiftLang clang-tablegen-targets)
